@model IEnumerable<InventoryManagement.Models.Inventory>

@{
    ViewData["Title"] = "Inventory";
}

<div class="container mt-4">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 >
            Inventory List
        </h2>
        <button class="btn btn-primary shadow-sm" data-bs-toggle="modal" data-bs-target="#addInventoryModal">
            <i class="bi bi-plus-circle"></i> Add Inventory
        </button>
    </div>

    <!-- Alerts -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success">@TempData["Message"]</div>
    }

    <!-- Filter Panel -->
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light fw-bold">
            <i class="bi bi-funnel"></i> Filter Inventory
        </div>
        <div class="card-body">
            <div class="row g-2">
                <div class="col-md-2">
                    <input type="text" id="filterId" class="form-control" placeholder="Inventory ID">
                </div>
                <div class="col-md-3">
                    <input type="text" id="filterName" class="form-control" placeholder="Inventory Name">
                </div>
                <div class="col-md-3">
                    <select id="filterType" class="form-select">
                        <option value="">--Type--</option>
                        <option>Monitor</option>
                        <option>Laptop</option>
                        <option>Printer</option>
                        <option>Keyboard</option>
                        <option>Mouse</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <input type="text" id="filterBrand" class="form-control" placeholder="Brand">
                </div>
                <div class="col-md-1">
                    <button class="btn btn-secondary w-100" id="clearFilter">
                        <i class="bi bi-x-circle"></i> Clear
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Inventory Table -->
    <div class="card shadow-sm">
        <div class="card-body">
            <table class="table table-hover table-bordered align-middle">
                <thead class="table-primary">
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Brand</th>
                        <th>Status</th>
                        <th style="width:150px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.InventoryID</td>
                            <td>@item.InventoryName</td>
                            <td>@item.InventoryType</td>
                            <td>@item.Brand</td>
                            <td>
                                <span class="badge
                                        @(item.CurrentStatus == "Available" ? "bg-success" :
                                                                            item.CurrentStatus == "Assigned" ? "bg-danger" : "bg-secondary")">
                                @item.CurrentStatus
                            </span>
                        </td>
                        <td>
                            <!-- Edit button -->
                            <button class="btn btn-sm btn-warning"
                                    data-bs-toggle="modal"
                                    data-bs-target="#editInventoryModal"
                                    data-id="@item.InventoryID"
                                    data-name="@item.InventoryName"
                                    data-type="@item.InventoryType"
                                    data-brand="@item.Brand"
                                    data-status="@item.CurrentStatus">
                                <i class="bi bi-pencil-square"></i> Edit
                            </button>

                                <!-- Delete Form -->
                                <form asp-action="Delete" asp-controller="Inventory" method="post" style="display:inline;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@item.InventoryID" />
                                    <button type="submit" class="btn btn-sm btn-danger"
                                            onclick="return confirm('Are you sure to delete this inventory?');">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </form>
                            </td>
                        </tr>
                                        }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal for Add Inventory -->
<div class="modal fade" id="addInventoryModal" tabindex="-1" aria-labelledby="addInventoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Add" asp-controller="Inventory" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title fw-bold" id="addInventoryModalLabel">Add Inventory</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Inventory Name</label>
                        <input type="text" name="InventoryName" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Inventory Type</label>
                        <select name="InventoryType" class="form-select" required>
                            <option value="">--Select--</option>
                            <option>Monitor</option>
                            <option>Laptop</option>
                            <option>Printer</option>
                            <option>Keyboard</option>
                            <option>Mouse</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Inventory Brand</label>
                        <input type="text" name="Brand" class="form-control" />
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal for Edit Inventory -->
<div class="modal fade" id="editInventoryModal" tabindex="-1" aria-labelledby="editInventoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Edit" asp-controller="Inventory" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title fw-bold" id="editInventoryModalLabel">Edit Inventory</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <input type="hidden" name="InventoryID" id="editInventoryId" />

                    <div class="mb-3">
                        <label class="form-label">Inventory Name</label>
                        <input type="text" name="InventoryName" id="editInventoryName" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Inventory Type</label>
                        <select name="InventoryType" id="editInventoryType" class="form-select" required>
                            <option value="">--Select--</option>
                            <option>Monitor</option>
                            <option>Laptop</option>
                            <option>Printer</option>
                            <option>Keyboard</option>
                            <option>Mouse</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Inventory Brand</label>
                        <input type="text" name="Brand" id="editInventoryBrand" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <input type="text" name="CurrentStatus" id="editInventoryStatus" class="form-control" readonly />
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Populate Edit modal with row data
        var editModal = document.getElementById('editInventoryModal');
        editModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            document.getElementById('editInventoryId').value = button.getAttribute('data-id');
            document.getElementById('editInventoryName').value = button.getAttribute('data-name');
            document.getElementById('editInventoryType').value = button.getAttribute('data-type');
            document.getElementById('editInventoryBrand').value = button.getAttribute('data-brand');

            var status = button.getAttribute('data-status');
            var statusInput = document.getElementById('editInventoryStatus');
            statusInput.value = status;

            // Disable editing if status is "Assigned"
            if (status === "Assigned") {
                statusInput.classList.add("bg-light");
            }
        });

        // Filtering Logic
        function filterTable() {
            var idFilter = document.getElementById('filterId').value.toLowerCase();
            var nameFilter = document.getElementById('filterName').value.toLowerCase();
            var typeFilter = document.getElementById('filterType').value.toLowerCase();
            var brandFilter = document.getElementById('filterBrand').value.toLowerCase();

            var rows = document.querySelectorAll('table tbody tr');

            rows.forEach(function(row) {
                var id = row.cells[0].innerText.toLowerCase();
                var name = row.cells[1].innerText.toLowerCase();
                var type = row.cells[2].innerText.toLowerCase();
                var brand = row.cells[3].innerText.toLowerCase();

                if ((id.includes(idFilter) || !idFilter) &&
                    (name.includes(nameFilter) || !nameFilter) &&
                    (type.includes(typeFilter) || !typeFilter) &&
                    (brand.includes(brandFilter) || !brandFilter)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        document.getElementById('filterId').addEventListener('keyup', filterTable);
        document.getElementById('filterName').addEventListener('keyup', filterTable);
        document.getElementById('filterType').addEventListener('change', filterTable);
        document.getElementById('filterBrand').addEventListener('keyup', filterTable);

        document.getElementById('clearFilter').addEventListener('click', function() {
            document.getElementById('filterId').value = '';
            document.getElementById('filterName').value = '';
            document.getElementById('filterType').value = '';
            document.getElementById('filterBrand').value = '';
            filterTable();
        });
    </script>
}
